{
	"info": {
		"_postman_id": "3c189c16-d8da-4990-aee5-f746141590bc",
		"name": "CRSP-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AM-770 - Scenario 1(Pain 001)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"Message not defined for routing\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\", \"003@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(false);",
							"    }",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const networkMaps = [",
							"    {",
							"    \"key\": \"100\",",
							"    \"active\": false,",
							"    \"cfg\": \"1.0.0\",",
							"   \"messages\":[",
							"      {",
							"         \"id\":\"001@1.0\",",
							"         \"host\":\"http://gateway.openfaas:8080\",",
							"         \"cfg\":\"1.0\",",
							"         \"txTp\":\"pain.001.001.11\",",
							"         \"channels\":[",
							"            {",
							"               \"id\":\"001@1.0\",",
							"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"               \"cfg\":\"1.0\",",
							"               \"typologies\":[",
							"                  {",
							"                     \"id\":\"028@1.0\",",
							"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                     \"cfg\":\"1.0\",",
							"                     \"rules\":[",
							"                        {",
							"                           \"id\":\"003@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                           \"cfg\":\"1.0\"",
							"                        },",
							"                        {",
							"                           \"id\":\"028@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                           \"cfg\":\"1.0\"",
							"                        }",
							"                     ]",
							"                  }",
							"               ]",
							"            }",
							"         ]",
							"      }",
							"   ]",
							"},",
							"{",
							"       \"key\": \"101\",",
							"       \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"TxTp\": \"pain.001.001.11\",\n    \"CstmrCdtTrfInitn\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"ed3e34ce4ebf413ba8ef96d84ec9351e\",\n            \"CreDtTm\": \"2021-12-03T15:36:11.000Z\",\n            \"NbOfTxs\": 1,\n            \"InitgPty\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            }\n        },\n        \"PmtInf\": {\n            \"PmtInfId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"PmtMtd\": \"TRA\",\n            \"ReqdAdvcTp\": {\n                \"DbtAdvc\": {\n                    \"Cd\": \"ADWD\",\n                    \"Prtry\": \"Advice with transaction details\"\n                }\n            },\n            \"ReqdExctnDt\": {\n                \"Dt\": \"2021-12-03\",\n                \"DtTm\": \"2021-12-03T15:36:11.000Z\"\n            },\n            \"Dbtr\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            },\n            \"DbtrAcct\": {\n                \"Id\": {\n                    \"Othr\": {\n                        \"Id\": \"e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",\n                        \"SchmeNm\": {\n                            \"Prtry\": \"PSEUDO\"\n                        }\n                    }\n                },\n                \"Nm\": \"April Grant\"\n            },\n            \"DbtrAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"CdtTrfTxInf\": {\n                \"PmtId\": {\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845\"\n                },\n                \"PmtTpInf\": {\n                    \"CtgyPurp\": {\n                        \"Prtry\": \"TRANSFER BLANK\"\n                    }\n                },\n                \"Amt\": {\n                    \"InstdAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        }\n                    },\n                    \"EqvtAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"CcyOfTrf\": \"USD\"\n                    }\n                },\n                \"ChrgBr\": \"DEBT\",\n                \"CdtrAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                },\n                \"Cdtr\": {\n                    \"Nm\": \"Felicia Easton Quill\",\n                    \"Id\": {\n                        \"PrvtId\": {\n                            \"DtAndPlcOfBirth\": {\n                                \"BirthDt\": \"1935-05-08\",\n                                \"CityOfBirth\": \"Unknown\",\n                                \"CtryOfBirth\": \"ZZ\"\n                            },\n                            \"Othr\": {\n                                \"Id\": \"+27707650428\",\n                                \"SchmeNm\": {\n                                    \"Prtry\": \"MSISDN\"\n                                }\n                            }\n                        }\n                    },\n                    \"CtctDtls\": {\n                        \"MobNb\": \"+27-707650428\"\n                    }\n                },\n                \"CdtrAcct\": {\n                    \"Id\": {\n                        \"Othr\": {\n                            \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"PSEUDO\"\n                            }\n                        }\n                    },\n                    \"Nm\": \"Felicia Quill\"\n                },\n                \"Purp\": {\n                    \"Cd\": \"MP2P\"\n                },\n                \"RgltryRptg\": {\n                    \"Dtls\": {\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\n                        \"Cd\": \"100\"\n                    }\n                },\n                \"RmtInf\": {\n                    \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\n                },\n                \"SplmtryData\": {\n                    \"Envlp\": {\n                        \"Doc\": {\n                            \"Dbtr\": {\n                                \"FrstNm\": \"April\",\n                                \"MddlNm\": \"Blake\",\n                                \"LastNm\": \"Grant\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"Cdtr\": {\n                                \"FrstNm\": \"Felicia\",\n                                \"MddlNm\": \"Easton\",\n                                \"LastNm\": \"Quill\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"DbtrFinSvcsPrvdrFees\": {\n                                \"Ccy\": \"USD\",\n                                \"Amt\": 307.14\n                            },\n                            \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\n                        }\n                    }\n                }\n            }\n        },\n        \"SplmtryData\": {\n            \"Envlp\": {\n                \"Doc\": {\n                    \"InitgPty\": {\n                        \"InitrTp\": \"CONSUMER\",\n                        \"Glctn\": {\n                            \"Lat\": \"-3.1609\",\n                            \"Long\": \"38.3588\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1(Pacs 002)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the correct network sub-map\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs002\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"setTimeout(checkStatusCode, 5000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"const networkMaps = [",
							"    {",
							"    \"key\": \"100\",",
							"    \"active\": false,",
							"    \"cfg\": \"1.0.0\",",
							"   \"messages\":[",
							"      {",
							"         \"id\":\"001@1.0\",",
							"         \"host\":\"http://gateway.openfaas:8080\",",
							"         \"cfg\":\"1.0\",",
							"         \"txTp\":\"pain.001.001.11\",",
							"         \"channels\":[",
							"            {",
							"               \"id\":\"001@1.0\",",
							"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor\",",
							"               \"cfg\":\"1.0\",",
							"               \"typologies\":[",
							"                  {",
							"                     \"id\":\"028@1.0\",",
							"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor\",",
							"                     \"cfg\":\"1.0\",",
							"                     \"rules\":[",
							"                        {",
							"                           \"id\":\"003@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                           \"cfg\":\"1.0\"",
							"                        },",
							"                        {",
							"                           \"id\":\"028@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                           \"cfg\":\"1.0\"",
							"                        }",
							"                     ]",
							"                  }",
							"               ]",
							"            }",
							"         ]",
							"      }",
							"   ]",
							"},",
							"{",
							"       \"key\": \"101\",",
							"       \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1 Case(5,6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should not send the new version of the network sub-map\", function () {",
							"    pm.expect(jsonData.networkMap.cfg).to.eql('2.1.0');",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const networkMaps = [",
							"    {",
							"    \"key\": \"100\",",
							"    \"active\": false,",
							"    \"cfg\": \"1.0.0\",",
							"   \"messages\":[",
							"      {",
							"         \"id\":\"001@1.0\",",
							"         \"host\":\"http://gateway.openfaas:8080\",",
							"         \"cfg\":\"1.0\",",
							"         \"txTp\":\"pain.001.001.11\",",
							"         \"channels\":[",
							"            {",
							"               \"id\":\"001@1.0\",",
							"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"               \"cfg\":\"1.0\",",
							"               \"typologies\":[",
							"                  {",
							"                     \"id\":\"028@1.0\",",
							"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                     \"cfg\":\"1.0\",",
							"                     \"rules\":[",
							"                        {",
							"                           \"id\":\"003@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-003-rel-1-1-0\",",
							"                           \"cfg\":\"1.0\"",
							"                        },",
							"                        {",
							"                           \"id\":\"028@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                           \"cfg\":\"1.0\"",
							"                        }",
							"                     ]",
							"                  }",
							"               ]",
							"            }",
							"         ]",
							"      }",
							"   ]",
							"},",
							"{",
							"       \"key\": \"101\",",
							"       \"active\": true,",
							"        \"cfg\": \"2.1.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1 Case(7,8)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the new version of the network sub-map\", function () {",
							"    pm.expect(jsonData.networkMap.cfg).to.eql('2.1.0');",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(checkStatusCode, 6000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"    const networkMaps = [",
							"    {",
							"    \"key\": \"100\",",
							"    \"active\": false,",
							"    \"cfg\": \"1.0.0\",",
							"   \"messages\":[",
							"      {",
							"         \"id\":\"001@1.0\",",
							"         \"host\":\"http://gateway.openfaas:8080\",",
							"         \"cfg\":\"1.0\",",
							"         \"txTp\":\"pain.001.001.11\",",
							"         \"channels\":[",
							"            {",
							"               \"id\":\"001@1.0\",",
							"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor\",",
							"               \"cfg\":\"1.0\",",
							"               \"typologies\":[",
							"                  {",
							"                     \"id\":\"028@1.0\",",
							"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor\",",
							"                     \"cfg\":\"1.0\",",
							"                     \"rules\":[",
							"                        {",
							"                           \"id\":\"003@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                           \"cfg\":\"1.0\"",
							"                        },",
							"                        {",
							"                           \"id\":\"028@1.0\",",
							"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                           \"cfg\":\"1.0\"",
							"                        }",
							"                     ]",
							"                  }",
							"               ]",
							"            }",
							"         ]",
							"      }",
							"   ]",
							"},",
							"{",
							"       \"key\": \"101\",",
							"       \"active\": true,",
							"        \"cfg\": \"2.1.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pain001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the correct network sub-map\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPain001\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(checkStatusCode, 6000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"const networkMaps = [",
							"    {",
							"\"key\": \"50\",",
							"\"active\": true,",
							"\"cfg\": \"2.1.0\",",
							"\"messages\":[{\"id\":\"001@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"txTp\":\"pain.001.001.11\",\"channels\":[{\"id\":\"001@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"typologies\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"rules\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\"cfg\":\"1.0\"}]}]}]}]}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"TxTp\": \"pain.001.001.11\",\n    \"CstmrCdtTrfInitn\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"ed3e34ce4ebf413ba8ef96d84ec9351e\",\n            \"CreDtTm\": \"2021-12-03T15:36:11.000Z\",\n            \"NbOfTxs\": 1,\n            \"InitgPty\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            }\n        },\n        \"PmtInf\": {\n            \"PmtInfId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"PmtMtd\": \"TRA\",\n            \"ReqdAdvcTp\": {\n                \"DbtAdvc\": {\n                    \"Cd\": \"ADWD\",\n                    \"Prtry\": \"Advice with transaction details\"\n                }\n            },\n            \"ReqdExctnDt\": {\n                \"Dt\": \"2021-12-03\",\n                \"DtTm\": \"2021-12-03T15:36:11.000Z\"\n            },\n            \"Dbtr\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            },\n            \"DbtrAcct\": {\n                \"Id\": {\n                    \"Othr\": {\n                        \"Id\": \"e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",\n                        \"SchmeNm\": {\n                            \"Prtry\": \"PSEUDO\"\n                        }\n                    }\n                },\n                \"Nm\": \"April Grant\"\n            },\n            \"DbtrAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"CdtTrfTxInf\": {\n                \"PmtId\": {\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845\"\n                },\n                \"PmtTpInf\": {\n                    \"CtgyPurp\": {\n                        \"Prtry\": \"TRANSFER BLANK\"\n                    }\n                },\n                \"Amt\": {\n                    \"InstdAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        }\n                    },\n                    \"EqvtAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"CcyOfTrf\": \"USD\"\n                    }\n                },\n                \"ChrgBr\": \"DEBT\",\n                \"CdtrAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                },\n                \"Cdtr\": {\n                    \"Nm\": \"Felicia Easton Quill\",\n                    \"Id\": {\n                        \"PrvtId\": {\n                            \"DtAndPlcOfBirth\": {\n                                \"BirthDt\": \"1935-05-08\",\n                                \"CityOfBirth\": \"Unknown\",\n                                \"CtryOfBirth\": \"ZZ\"\n                            },\n                            \"Othr\": {\n                                \"Id\": \"+27707650428\",\n                                \"SchmeNm\": {\n                                    \"Prtry\": \"MSISDN\"\n                                }\n                            }\n                        }\n                    },\n                    \"CtctDtls\": {\n                        \"MobNb\": \"+27-707650428\"\n                    }\n                },\n                \"CdtrAcct\": {\n                    \"Id\": {\n                        \"Othr\": {\n                            \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"PSEUDO\"\n                            }\n                        }\n                    },\n                    \"Nm\": \"Felicia Quill\"\n                },\n                \"Purp\": {\n                    \"Cd\": \"MP2P\"\n                },\n                \"RgltryRptg\": {\n                    \"Dtls\": {\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\n                        \"Cd\": \"100\"\n                    }\n                },\n                \"RmtInf\": {\n                    \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\n                },\n                \"SplmtryData\": {\n                    \"Envlp\": {\n                        \"Doc\": {\n                            \"Dbtr\": {\n                                \"FrstNm\": \"April\",\n                                \"MddlNm\": \"Blake\",\n                                \"LastNm\": \"Grant\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"Cdtr\": {\n                                \"FrstNm\": \"Felicia\",\n                                \"MddlNm\": \"Easton\",\n                                \"LastNm\": \"Quill\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"DbtrFinSvcsPrvdrFees\": {\n                                \"Ccy\": \"USD\",\n                                \"Amt\": 307.14\n                            },\n                            \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\n                        }\n                    }\n                }\n            }\n        },\n        \"SplmtryData\": {\n            \"Envlp\": {\n                \"Doc\": {\n                    \"InitgPty\": {\n                        \"InitrTp\": \"CONSUMER\",\n                        \"Glctn\": {\n                            \"Lat\": \"-3.1609\",\n                            \"Long\": \"38.3588\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pain 013",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPain013\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(checkStatusCode, 5000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"const networkMaps = [",
							"    {",
							"\"key\": \"55\",",
							"\"active\": true,",
							"\"cfg\": \"2.1.1\",",
							"\"messages\":[{\"id\":\"002@1.0\",\"host\":\"http://gateway.openfaas:8080\",\"cfg\":\"1.0\",\"txTp\":\"pain.013.001.09\",\"channels\":[{\"id\":\"001@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"typologies\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"rules\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\"cfg\":\"1.0\"}]},{\"id\":\"029@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"rules\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\"cfg\":\"1.0\"}]}]},{\"id\":\"002@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"typologies\":[{\"id\":\"030@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"rules\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\"cfg\":\"1.0\"}]},{\"id\":\"031@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0\",\"rules\":[{\"id\":\"028@1.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\"cfg\":\"1.0\"}]}]}]}]}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"pain.013.001.09\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pacs 002",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs002\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(checkStatusCode, 5000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"const networkMaps = [",
							"    {",
							" \"key\": \"45\",",
							" \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pacs 008",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"018@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs008\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(checkStatusCode, 5000);",
							"",
							"    function checkStatusCode() {",
							"",
							"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
							"",
							"            tests['status code should be 200']= res.code ===200;",
							"",
							"        });",
							"    }",
							"const networkMaps = [",
							"    {",
							" \"key\": \"60\",",
							" \"active\": true,",
							"\"cfg\": \"3.0.0\",",
							"\"messages\":[{\"id\":\"005@1.0.0\",\"host\":\"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0.0\",\"txTp\":\"pacs.008.001.10\",\"channels\":[{\"id\":\"001@1.0.0\",\"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\"cfg\":\"1.0.0\",\"typologies\":[{\"id\":\"028@1.0.0\",\"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\"cfg\":\"1.0.0\",\"rules\":[{\"id\":\"018@1.0.0\",\"host\":\"http://gateway.openfaas:8080/function/off-rule-018\",\"cfg\":\"1.0.0\"}]}]}]}]}",
							"]",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"});",
							"",
							"",
							"pm.sendRequest({",
							"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"pacs.008.001.10\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Unknown Transaction type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"Message not defined for routing\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"018@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(false);",
							"    }",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"blah.001.001.01\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-channel-router-setup-processor/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		}
	]
}