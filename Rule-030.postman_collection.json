{
	"info": {
		"_postman_id": "8a4b334f-38c5-4c22-9c5d-94c32a3fc7e6",
		"name": "Rule-030",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pain 001",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"let e2eID = JSON.stringify(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"    \"key\": \"102\",\r",
									"    \"active\": true,\r",
									"    \"cfg\": \"1.0.0\",\r",
									"   \"messages\":[\r",
									"      {\r",
									"         \"id\":\"001@1.0.0\",\r",
									"         \"host\":\"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"         \"cfg\":\"1.0.0\",\r",
									"         \"txTp\":\"pain.001.001.11\",\r",
									"         \"channels\":[\r",
									"            {\r",
									"               \"id\":\"001@1.0.0\",\r",
									"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"               \"cfg\":\"1.0.0\",\r",
									"               \"typologies\":[\r",
									"                  {\r",
									"                     \"id\":\"028@1.0.0\",\r",
									"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                     \"cfg\":\"1.0.0\",\r",
									"                     \"rules\":[\r",
									"                        {\r",
									"                           \"id\":\"003@1.0.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-003\",\r",
									"                           \"cfg\":\"1.0.0\"\r",
									"                        },\r",
									"                        {\r",
									"                           \"id\":\"028@1.0.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                           \"cfg\":\"1.0.0\"\r",
									"                        }\r",
									"                     ]\r",
									"                  }\r",
									"               ]\r",
									"            }\r",
									"         ]\r",
									"      }\r",
									"   ]\r",
									"}\r",
									"]\r",
									"\r",
									"setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"    function checkStatusCode() {\r",
									"\r",
									"        pm.sendRequest({\r",
									"            url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"            method: 'POST',\r",
									"            header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"            body: {\r",
									"                mode: 'raw',\r",
									"                raw: JSON.stringify({\r",
									"                    query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                            INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                            OPTIONS { overwrite: true }`\r",
									"                })\r",
									"            }\r",
									"        });\r",
									"    }\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"6b444365559776cbe7dfb551a6888\",\r\n            \"CreDtTm\": \"2021-11-12T10:18:43.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": { \r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6fba567b-bc2b-4d66-80a8-2434dbd2\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T10:18:43.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27718877119\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Colin Cameron\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845800\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"WITHDRAWAL\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"David Owen Klein\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1962-01-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27781569879\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-781569879\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27781569879\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"David Klein\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 53317231546556900.46 from Colin to David\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"Colin\",\r\n                                \"MddlNm\": \"\",\r\n                                \"LastNm\": \"Cameron\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"David\",\r\n                                \"MddlNm\": \"Owen\",\r\n                                \"LastNm\": \"Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 123123\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T10:23:43.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0187\",\r\n                            \"Long\": \"37.4368\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/execute",
							"protocol": "http",
							"host": [
								"gateway",
								"openfaas"
							],
							"port": "8080",
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    console.log(jsonData.result)\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == {{EndToEndId}} return transaction \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pain 013",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const networkMaps = [\r",
									"    {\r",
									"   \"key\":\"55\",\r",
									"   \"active\":true,\r",
									"   \"cfg\":\"2.1.1\",\r",
									"   \"messages\":[\r",
									"      {\r",
									"         \"id\":\"002@1.0\",\r",
									"         \"host\":\"http://gateway.openfaas:8080\",\r",
									"         \"cfg\":\"1.0\",\r",
									"         \"txTp\":\"pain.013.001.09\",\r",
									"         \"channels\":[\r",
									"            {\r",
									"               \"id\":\"001@1.0\",\r",
									"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"               \"cfg\":\"1.0\",\r",
									"               \"typologies\":[\r",
									"                  {\r",
									"                     \"id\":\"028@1.0.\",\r",
									"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                     \"cfg\":\"1.0\",\r",
									"                     \"rules\":[\r",
									"                        {\r",
									"                           \"id\":\"028@1.0.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                           \"cfg\":\"1.0.0\"\r",
									"                        }\r",
									"                     ]\r",
									"                  },\r",
									"                  {\r",
									"                     \"id\":\"029@1.0\",\r",
									"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                     \"cfg\":\"1.0\",\r",
									"                     \"rules\":[\r",
									"                        {\r",
									"                           \"id\":\"028@1.0.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                           \"cfg\":\"1.0.0\"\r",
									"                        }\r",
									"                     ]\r",
									"                  }\r",
									"               ]\r",
									"            },\r",
									"            {\r",
									"               \"id\":\"002@1.0\",\r",
									"               \"host\":\"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"               \"cfg\":\"1.0\",\r",
									"               \"typologies\":[\r",
									"                  {\r",
									"                     \"id\":\"030@1.0\",\r",
									"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                     \"cfg\":\"1.0.0\",\r",
									"                     \"rules\":[\r",
									"                        {\r",
									"                           \"id\":\"028@1.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                           \"cfg\":\"1.0.0\"\r",
									"                        }\r",
									"                     ]\r",
									"                  },\r",
									"                  {\r",
									"                     \"id\":\"031@1.0\",\r",
									"                     \"host\":\"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                     \"cfg\":\"1.0\",\r",
									"                     \"rules\":[\r",
									"                        {\r",
									"                           \"id\":\"028@1.0\",\r",
									"                           \"host\":\"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                           \"cfg\":\"1.0\"\r",
									"                        }\r",
									"                     ]\r",
									"                  }\r",
									"               ]\r",
									"            }\r",
									"         ]\r",
									"      }\r",
									"   ]\r",
									"}\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CdtrPmtActvtnReq.GrpHdrMsgId);\r",
									"let e2eID = JSON.stringify(req.CdtrPmtActvtnReq.GrpHdr.MsgId);\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response, 'vvhkjfbkjgjhndflkgjdklfj')\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"994443699119746c5be7dfb5516ba6700\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-721299138\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+27721299138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845800\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/quoteReply",
							"protocol": "http",
							"host": [
								"gateway",
								"openfaas"
							],
							"port": "8080",
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactionHistory FILTER transaction.CdtrPmtActvtnReq.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "http",
							"host": [
								"arango",
								"development"
							],
							"port": "8529",
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const req = JSON.parse(request.data);",
									"const graphTransactions = [",
									"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\"",
									"]",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});",
									"",
									"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
									"    pm.sendRequest({",
									"        url: 'http://gateway.openfaas:8080/_db/pseudonyms/_api/cursor',",
									"        method: 'POST',",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
									"                        REMOVE { _key: transaction } IN transactionRelationship",
									"                        OPTIONS { ignoreErrors: true }`",
									"            })",
									"        }",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const now = new Date().getTime();\r",
									"\r",
									"pm.globals.set(\"now\", new Date().toISOString());\r",
									"\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"let e2eID = JSON.stringify(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"{\r",
									"       \"key\": \"109\",\r",
									"       \"active\": true,\r",
									"        \"cfg\": \"2.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_030@1.0.0\",\r",
									"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_030@1.0.0\",\r",
									"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"030@1.0.0\",\r",
									"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0\",\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    \r",
									"}\r",
									"]\r",
									"\r",
									"const transactionGraph = [{\r",
									"    _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\",\r",
									"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
									"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
									"    TxTp: \"pacs.002.001.12\",\r",
									"    TxSts: \"ACCC\",\r",
									"    CreDtTm: new Date(now).toISOString(),\r",
									"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
									"    EndToEndId: \"2c516801007642dfb892944tte1ch645800\"\r",
									"\r",
									"}]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
									"                    INSERT transaction INTO transactionRelationship\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"    function checkStatusCode() {\r",
									"\r",
									"        pm.sendRequest({\r",
									"            url: 'http://arango.development:8529/_db/networkmap/_api/cursor',\r",
									"            method: 'POST',\r",
									"            header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"            body: {\r",
									"                mode: 'raw',\r",
									"                raw: JSON.stringify({\r",
									"                    query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                            INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                            OPTIONS { overwrite: true }`\r",
									"                })\r",
									"            }\r",
									"        });\r",
									"    }\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"TxTp\": \"pacs.002.001.12\",\n    \"FIToFIPmtSts\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"259763kloi2gggi7niipmug0925oyiii\",\n            \"CreDtTm\": \"{{now}}\"\n        },\n        \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n                {\n                    \"Amt\": {\n                        \"Amt\": 307.14,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 153.57,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 30.71,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp002\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"InstdAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp002\"\n                    }\n                }\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service-rel-1-0-0/transfer-response",
							"protocol": "http",
							"host": [
								"gateway",
								"openfaas"
							],
							"port": "8080",
							"path": [
								"function",
								"off-transaction-monitoring-service-rel-1-0-0",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId ==  {{EndToEndId}} return transaction\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "http",
							"host": [
								"arango",
								"development"
							],
							"port": "8529",
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pacs 008",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFICstmrCdt.GrpHdr.MsgId);\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"`\r",
									"    + req.FIToFICstmrCdt.GrpHdr.MsgId\r",
									"    + `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"`\r",
									"        + req.FIToFICstmrCdt.GrpHdr.MsgId\r",
									"        + `\\\"`));\r",
									"}\r",
									"\r",
									"let e2eID = JSON.stringify(req.FIToFICstmrCdt.GrpHdr.MsgId);\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pacs.008.001.10\",\r\n    \"FIToFICstmrCdt\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"6b444365119746c5be7dfb5516ba658c\",\r\n            \"CreDtTm\": \"2021-11-23T12:30:21.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"SttlmInf\": {\r\n                \"SttlmMtd\": \"CLRG\"\r\n            }\r\n        },\r\n        \"CdtTrfTxInf\": {\r\n            \"PmtId\": {\r\n                \"InstrId\": \"557bf747-12f1-4983-9004-10a\",\r\n                \"EndToEndId\": \"2c516801007642dfb892944dde1cf845800\"\r\n            },\r\n            \"IntrBkSttlmAmt\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 14315.99,\r\n                    \"Ccy\": \"USD\"\r\n                }\r\n            },\r\n            \"InstdAmt\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 14315.99,\r\n                    \"Ccy\": \"USD\"\r\n                }\r\n            },\r\n            \"ChrgBr\": \"DEBT\",\r\n            \"ChrgsInf\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 141.74,\r\n                    \"Ccy\": \"USD\"\r\n                },\r\n                \"Agt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Evan Morgan O'Connell\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1965-01-27\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27887145476\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-887145476\"\r\n                }\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Evan Morgan O'Connell\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1965-01-27\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27887145476\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-887145476\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27887145476\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Evan O'Connell\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp002\"\r\n                    }\r\n                }\r\n            },\r\n            \"Cdtr\": {\r\n                \"Nm\": \"Colin Owen Bryce\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1995-01-03\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27875136965\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-875136965\"\r\n                }\r\n            },\r\n            \"CdtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27875136965\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Colin Bryce\"\r\n            },\r\n            \"Purp\": {\r\n                \"Cd\": \"MP2P\"\r\n            }\r\n        },\r\n        \"RgltryRptg\": {\r\n            \"Dtls\": {\r\n                \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                \"Cd\": \"100\"\r\n            }\r\n        },\r\n        \"RmtInf\": {\r\n            \"Ustrd\": \"Payment of USD 14174.25 from Evan to Colin\"\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"Xprtn\": \"2021-11-23T12:35:17.000Z\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/transfer",
							"protocol": "http",
							"host": [
								"gateway",
								"openfaas"
							],
							"port": "8080",
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactionHistory FILTER transaction.FIToFICstmrCdt.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "http",
							"host": [
								"arango",
								"development"
							],
							"port": "8529",
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenario 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\"\r",
							"]\r",
							"\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"   \r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"   \r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"No prior successful payments to creditor found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Less than 5 successful transactions in threshold - false\r",
							"\r",
							"const now = new Date().getTime();\r",
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const ruleConfig = [\r",
							"   {\r",
							"    \"id\": \"030@1.0.0\",\r",
							"    \"cfg\": \"1.0.0\",\r",
							"    \"config\": {\r",
							"        \"bands\": [\r",
							"            {\r",
							"                \"subRuleRef\": \".01\",\r",
							"                \"upperLimit\": 2,\r",
							"                \"outcome\": true,\r",
							"                \"reason\": \"No prior successful payments to creditor found\"\r",
							"            },\r",
							"            {\r",
							"                \"subRuleRef\": \".00\",\r",
							"                \"lowerLimit\": 2,\r",
							"                \"outcome\": false,\r",
							"                \"reason\": \"Prior successful payment to creditor found\"\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"  }\r",
							"]\r",
							"\r",
							"\r",
							"\r",
							"const transactionGraph = [{\r",
							"    _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\",\r",
							"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
							"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    TxTp: \"pacs.002.001.12\",\r",
							"    TxSts: \"ACCC\",\r",
							"    CreDtTm: new Date(now).toISOString(),\r",
							"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"    EndToEndId: \"2c516801007642dfb892944dde1cf845\"\r",
							"\r",
							"}]\r",
							"\r",
							"\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/Configuration/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"030\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004@1.0.0\",\r\n                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"028@1.0.0\",\r\n                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"030@1.0.0\",\r\n                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-rule-030-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d\",\r",
							"    \"624501267341c252e385b3bae4b5ca010ace4cdf3faf1b8cb42cc9fa623113a\"\r",
							"]\r",
							"\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Prior successful payment to creditor found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Less than 5 successful transactions in threshold - false\r",
							"\r",
							"const now = new Date().getTime();\r",
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const ruleConfig = [\r",
							"   {\r",
							"    \"id\": \"030@1.0.0\",\r",
							"    \"cfg\": \"1.0.0\",\r",
							"    \"config\": {\r",
							"        \"bands\": [\r",
							"            {\r",
							"                \"subRuleRef\": \".01\",\r",
							"                \"upperLimit\": 2,\r",
							"                \"outcome\": true,\r",
							"                \"reason\": \"No prior successful payments to creditor found\"\r",
							"            },\r",
							"            {\r",
							"                \"subRuleRef\": \".00\",\r",
							"                \"lowerLimit\": 2,\r",
							"                \"outcome\": false,\r",
							"                \"reason\": \"Prior successful payment to creditor found\"\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"  }\r",
							"]\r",
							"\r",
							"\r",
							"\r",
							"const transactionGraph = [{\r",
							"    _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d\",\r",
							"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
							"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    TxTp: \"pacs.002.001.12\",\r",
							"    TxSts: \"ACCC\",\r",
							"    CreDtTm: new Date(now).toISOString(),\r",
							"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"    EndToEndId: \"2c516801007642dfb892944dde1cf845\"\r",
							"\r",
							"}, {\r",
							"    _key: \"624501267341c252e385b3bae4b5ca010ace4cdf3faf1b8cb42cc9fa623113a\",\r",
							"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
							"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    TxTp: \"pacs.002.001.12\",\r",
							"    TxSts: \"ACCC\",\r",
							"    CreDtTm: new Date(now - 5259486000 ).toISOString(),\r",
							"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"    EndToEndId: \"2c516801007642dfb892944dde1cf845\"\r",
							"}]\r",
							"\r",
							"\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/Configuration/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"030\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004@1.0.0\",\r\n                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"028@1.0.0\",\r\n                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"030@1.0.0\",\r\n                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-rule-030-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Less than 5 successful transactions in threshold - false\r",
							"\r",
							"const now = new Date().getTime();\r",
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const ruleConfig = [\r",
							"   {\r",
							"    \"id\": \"030@1.0.0\",\r",
							"    \"cfg\": \"1.0.0\",\r",
							"    \"config\": {\r",
							"        \"bands\": [\r",
							"            {\r",
							"                \"subRuleRef\": \".01\",\r",
							"                \"upperLimit\": 2,\r",
							"                \"outcome\": true,\r",
							"                \"reason\": \"No prior successful payments to creditor found\"\r",
							"            },\r",
							"            {\r",
							"                \"subRuleRef\": \".00\",\r",
							"                \"lowerLimit\": 2,\r",
							"                \"outcome\": false,\r",
							"                \"reason\": \"Prior successful payment to creditor found\"\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"  }\r",
							"]\r",
							"\r",
							"\r",
							"\r",
							"const transactionGraph = [{\r",
							"    _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\",\r",
							"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
							"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    TxTp: \"pacs.002.001.12\",\r",
							"    TxSts: \"ACCC\",\r",
							"    CreDtTm: new Date(now).toISOString(),\r",
							"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"    EndToEndId: \"2c516801007642dfb892944dde1cf845\"\r",
							"\r",
							"}, {\r",
							"    _key: \"624501267341c252e385b3bae4b5ca010ace4cdf3faf1b8cb42cc9fa623113a5\",\r",
							"    _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\r",
							"    _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    TxTp: \"pacs.002.001.12\",\r",
							"    TxSts: \"ACSC\",\r",
							"    CreDtTm: new Date(now - 5259486000 ).toISOString(),\r",
							"    PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"    EndToEndId: \"2c516801007642dfb892944dde1cf845\"\r",
							"}]\r",
							"\r",
							"\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://arango.development:8529/_db/Configuration/_api/cursor',\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"030\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc7067767d7\",\r",
							"    \"624501267341c252e385b3bae4b5ca010ace4cdf3faf1b8cb42cc9fa623113a5\"\r",
							"]\r",
							"\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"No prior successful payments to creditor found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://arango.development:8529/_db/pseudonyms/_api/cursor',\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004@1.0.0\",\r\n                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"028@1.0.0\",\r\n                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"030@1.0.0\",\r\n                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://gateway.openfaas:8080/function/off-rule-030-rel-1-0-0/execute",
					"protocol": "http",
					"host": [
						"gateway",
						"openfaas"
					],
					"port": "8080",
					"path": [
						"function",
						"off-rule-030-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "EndToEndId",
			"value": ""
		}
	]
}
