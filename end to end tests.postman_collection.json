{
	"info": {
		"_postman_id": "dae87e40-33ac-4323-b54b-07248d202b3c",
		"name": "end to end tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pain 001",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"8f8488f2-bb8d-4859-bbb3-ee38a6863707\",\r\n            \"CreDtTm\": \"2021-11-12T10:18:43.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": { \r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6fba567b-bc2b-4d66-80a8-2434dbd25aa8\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T10:18:43.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27718877119\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Colin Cameron\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"baf005dc-c223-4be1-8e5a-ed72ba472b80\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"David Owen Klein\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1962-01-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27781569879\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-781569879\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27781569879\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"David Klein\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 53317231546556900.46 from Colin to David\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"Colin\",\r\n                                \"MddlNm\": \"\",\r\n                                \"LastNm\": \"Cameron\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"David\",\r\n                                \"MddlNm\": \"Owen\",\r\n                                \"LastNm\": \"Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 123123\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T10:23:43.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0187\",\r\n                            \"Long\": \"37.4368\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/execute",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction  2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"c2a2a078-b0fb-438b-8ca2-73607877657c\",\r\n            \"CreDtTm\": \"2021-11-12T10:54:17.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Evan Sam Duncan\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1968-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27759873216\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-759873216\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"9bd2835c-5ee9-4ebd-9ba2-c5516fe37189\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T10:54:17.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Evan Sam Duncan\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1968-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27759873216\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-759873216\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27759873216\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Evan Duncan\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"aa399357-7d7a-4188-8813-773661e973f9\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 1000,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 1000,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Adam Reese Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1934-01-14\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27759873216\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-759873216\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27759873216\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"Adam Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 89648998418867000.94 from Evan to Adam\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"Evan\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Duncan\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Adam\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 1000\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T10:59:17.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1561\",\r\n                            \"Long\": \"38.4132\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/execute",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"416225cf-0a01-4bc6-9fcc-6a75a3928fc9\",\r\n            \"CreDtTm\": \"2021-11-12T10:58:50.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"John Lee Manfrey\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1921-09-10\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27765512473\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-765512473\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"82d40fc8-8b63-4c38-915f-239765afce41\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T10:58:50.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"John Lee Manfrey\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1921-09-10\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27765512473\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-765512473\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27765512473\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"John Manfrey\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"8deee559-2020-45f6-8eda-2b7cdf16b033\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 10000,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 10000,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Julia Quinn Peters\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1943-08-04\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27741280920\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-741280920\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27741280920\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"Julia Peters\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 41549629792741600.39 from John to Julia\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"John\",\r\n                                \"MddlNm\": \"Lee\",\r\n                                \"LastNm\": \"Manfrey\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Julia\",\r\n                                \"MddlNm\": \"Quinn\",\r\n                                \"LastNm\": \"Peters\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 10000\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T11:03:50.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0361\",\r\n                            \"Long\": \"37.4832\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/execute",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CstmrCdtTrfInitn.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CstmrCdtTrfInitn.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"1fcea8d4-65c6-49fb-978a-f6465450d6de\",\r\n            \"CreDtTm\": \"2021-11-12T11:02:01.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Hilda Grant\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1992-06-15\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27775814716\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-775814716\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"14858b72-fff9-4857-bdd5-71855ee2a0b9\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T11:02:01.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Hilda Grant\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1992-06-15\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27775814716\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-775814716\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27775814716\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Hilda Grant\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"bcd5fcb4-232a-47c3-8e28-1ee137150306\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 300,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":300,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Felicia Owen Tüffman\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1919-08-20\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27882335292\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-882335292\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27882335292\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"Felicia Tüffman\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 51438547183227700.89 from Hilda to Felicia\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"Hilda\",\r\n                                \"MddlNm\": \"\",\r\n                                \"LastNm\": \"Grant\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Felicia\",\r\n                                \"MddlNm\": \"Owen\",\r\n                                \"LastNm\": \"Tüffman\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 300\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T11:07:01.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0501\",\r\n                            \"Long\": \"37.4836\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/execute",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pain 013",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CdtrPmtActvtnReq.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"c46087cb-7688-4b36-9141-c9f1fb1ae582\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-721299138\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+27721299138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/quoteReply",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CdtrPmtActvtnReq.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CdtrPmtActvtnReq.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgID\": \"90cb0616-17e4-441c-a811-466075bfa1cb\",\r\n            \"CreDtTm\": \"2021-11-18T10:04:25.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Evan Nova Imara\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1927-05-11\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27811895177\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-811895177\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6ecb47e2-ff07-434c-8f6d-9b77c2af1918\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-11-18T10:04:23.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-11-18T10:09:23.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Evan Nova Imara\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1927-05-11\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27811895177\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-811895177\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27811895177\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        },\r\n                        \"Nm\": \"Evan Imara\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"eec7a8a2-6320-4057-87c1-276e20ed31af\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 7623646894306390,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 7623646894306390,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Gloria Kelly Ford\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1979-09-03\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27848990187\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-848990187\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27848990187\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            },\r\n                            \"Nm\": \"Gloria Ford\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 7548165241887520.84,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 75481652418875.2,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": \"0\",\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0193\",\r\n                            \"Long\": \"38.7326\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/quoteReply",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CdtrPmtActvtnReq.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CdtrPmtActvtnReq.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgID\": \"ba5008c8-d422-4962-a553-c921b3d28aba\",\r\n            \"CreDtTm\": \"2021-11-18T10:18:42.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Harper Imara\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1996-02-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27882308277\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-882308277\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6f5f2ec4-a3f7-40c2-9ac2-41cd91dcff14\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-11-18T10:18:40.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-11-18T10:23:40.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Horatio Harper Imara\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1996-02-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27882308277\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-882308277\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27882308277\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        },\r\n                        \"Nm\": \"Horatio Imara\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"fecba2f8-688c-456c-84a8-e969533e5605\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 78328645456787000,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 78328645456787000,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"David Jamie Imara\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1994-01-22\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27789441561\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-789441561\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27789441561\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            },\r\n                            \"Nm\": \"David Imara\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 77553114313650500.43,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 775531143136505,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0291\",\r\n                            \"Long\": \"37.6068\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/quoteReply",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CdtrPmtActvtnReq.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.CdtrPmtActvtnReq.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.CdtrPmtActvtnReq.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgID\": \"6c475079-29f3-445b-bc55-50800d81d60b\",\r\n            \"CreDtTm\": \"2021-11-18T11:08:16.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Coleen Lee Quill\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1920-06-25\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27713101382\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-713101382\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"9ffcf5d2-793a-4633-a9e4-0c6d2353e59a\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-11-18T11:08:14.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-11-18T11:13:14.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Coleen Lee Quill\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1920-06-25\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27713101382\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-713101382\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27713101382\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        },\r\n                        \"Nm\": \"Coleen Quill\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"fae99a1a-f35a-4d40-a74d-b1ee6a692e47\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 41146585856879400,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 41146585856879400,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Horatio Blake Ford\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-02-24\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27795161726\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-795161726\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27795161726\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            },\r\n                            \"Nm\": \"Horatio Ford\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 40739193917702400.75,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 407391939177024,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1607\",\r\n                            \"Long\": \"37.5654\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/quoteReply",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.CdtrPmtActvtnReq.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"var req = JSON.parse(request.data);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"TxTp\": \"pacs.002.001.12\",\n  \"FIToFIPmtSts\": {\n    \"GrpHdr\": {\n      \"MsgID\": \"ec3a6a10-0c31-4564-94f6-ed1d79fed91f\",\n      \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\n    },\n    \"TxInfAndSts\": {\n      \"OrgnlInstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\n      \"OrgnlEndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\",\n      \"TxSts\": \"ACSC\",\n      \"ChrgsInf\": [\n        {\n          \"Amt\": {\n            \"Amt\": 157605510200862,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          }\n        }\n      ],\n      \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\n      \"InstgAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp001\"\n          }\n        }\n      },\n      \"InstdAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp002\"\n          }\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/transfer-response",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction 1 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"var req = JSON.parse(request.data);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"\r",
									"\r",
									"\r",
									"if (pm.collectionVariables.get(\"EndToEndId\") == JSON.stringify(`\\\"` \r",
									"+ req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"+ `\\\"`)) {\r",
									"    console.error(\"previos e2e id\", pm.collectionVariables.get(\"EndToEndId\"), \"is the same as current \", JSON.stringify(`\\\"` \r",
									"    + req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"    + `\\\"`));\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", JSON.stringify(`\\\"` \r",
									"+ req.FIToFIPmtSts.GrpHdr.MsgId \r",
									"+ `\\\"`));\r",
									"\r",
									"console.log(\"e2e id set to \", pm.collectionVariables.get(\"EndToEndId\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"TxTp\": \"pacs.002.001.12\",\n    \"FIToFIPmtSts\": {\n        \"GrpHdr\": {\n            \"MsgID\": \"ea7d9965-c590-4d5e-bc22-bb1b28ba3d23\",\n            \"CreDtTm\": \"2021-11-19T09:39:59.000Z\"\n        },\n        \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"ce3f4c80-ace9-48ff-a9a1-9d4b6c4a4919\",\n            \"OrgnlEndToEndId\": \"2ab0a03c-5a62-4e4e-b802-48bb0903cc03\",\n            \"TxSts\": \"ACSC\",\n            \"ChrgsInf\": [\n                {\n                    \"Amt\": {\n                        \"Amt\": 101528958810216,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 10254424839831800,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 10254424839831800,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp002\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"AccptncDtTm\": \"2021-11-19T09:39:58.000Z\",\n            \"InstgAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"InstdAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp002\"\n                    }\n                }\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://gateway.openfaas:8080/function/off-transaction-monitoring-service/transfer-response",
							"protocol": "https",
							"host": [
								"frmfaas",
								"sybrin",
								"com"
							],
							"path": [
								"function",
								"off-transaction-monitoring-service",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\":{{query}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arango.development:8529/_db/transactionHistory/_api/cursor",
							"protocol": "https",
							"host": [
								"frmarango",
								"sybrin",
								"com"
							],
							"path": [
								"_db",
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "userRequested",
			"value": ""
		},
		{
			"key": "EndToEndId",
			"value": ""
		}
	]
}